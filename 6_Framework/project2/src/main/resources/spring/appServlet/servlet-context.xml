<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- Handler Mapping 어노테이션을 인식하는 태그 -->
	<!-- @RequesetMapping, @GetMapping, @PostMapping, @ExceptionHandler -->
	<annotation-driven />
	
	
  <!-- 트랜잭션 처리 시 @Transactional 어노테이션 사용할 예정 
    @Transactional : 클래스 또는 메서드 수행 후 트랜잭션 처리를 하라고 알려주는 어노테이션
    -> 해당 어노테이션을 인식하라는 설정이 필요함
      -> annotation-driven
  -->
  <tx:annotation-driven transaction-manager="transactionManager"  />
	
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /webapp/resources 폴더 경로를 웹에서 요청했을 때 접근 가능하게 하는 태그 -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- favicon 추가 -->
	<resources mapping="/favicon.ico" location="/resources/images/favicon.ico" />



	<!-- View Resolver 객체(bean) 생성 구문 -->
	<!-- 
		Controller에서 반환된 값 앞/뒤에 
		prefix / suffix를 붙여 완성된 경로의 jsp로 forward
	 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- bean : Spring에서 만든 객체 -->
	
	
	
	<!-- component-scan : base-package에 명시된 패키지 아래에
			@Component 관련 어노테이션을 찾아 인식하여 bean으로 등록하는 태그
			(bean을 찾아서 등록하는 과정이라고 하여 bean scanning 이라고도 함)
	
		부모 : @Component 
		자식 : @Controller, @Service, @Repository
	 -->
	<context:component-scan base-package="edu.kh.project" />
	
	
	
	<!-- 인터셉터 등록/매핑주소 설정 -->
	<interceptors>
		
		<interceptor>
			<mapping path="/**" />  <!-- 모든 요청 주소 -->
			<beans:bean id="boardTypeInterceptor"  
				class="edu.kh.project.common.interceptor.BoardTypeInterceptor"/>
		</interceptor>
		
	</interceptors>
	
	
	<!-- 스프링 스케쥴러 어노테이션 인식 -->
	<task:annotation-driven/>
	
	<!-- AOP 관련 어노테이션 인식 + proxy 제어 -->
	<aop:aspectj-autoproxy/>	
	
	
	
	
	
</beans:beans>
